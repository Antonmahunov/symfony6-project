security:
    password_hashers:
        App\Entity\User:
            algorithm: bcrypt
        Symfony\Component\Security\Core\User\InMemoryUser: plaintext
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    john:
                        password: helloJohn
                        roles: 'ROLE_USER'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
#            anonymous: true


            # activate different ways to authenticate

#            http_basic: ~
            form-login:
                check_path: security_login
                login_path: security_login
                enable_csrf: true
                default_target_path: micro_post_index
#                always_use_default_target_path: false
#                use_referer: true
#                failure_path: true
#                username_parameter: _username
#                password_parameter: _password
            logout:
                path: security_logout
                target: micro_post_index
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/micro-post, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }